# Generated by Django 3.1.2 on 2020-11-21 04:44

from decimal import Decimal
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profesional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('matricula', models.CharField(blank=True, max_length=7, null=True, unique=True, verbose_name='matrícula')),
                ('cuit', models.CharField(blank=True, max_length=14, verbose_name='CUIT')),
            ],
            options={
                'verbose_name_plural': 'profesionales',
                'ordering': ['matricula'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Actuantes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horas', models.PositiveSmallIntegerField(default=10, help_text='Horas de medición, gabinete, gestiones y trámites.')),
                ('profesional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actuantes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-horas', 'profesional'],
            },
        ),
        migrations.CreateModel(
            name='Combustible',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('combustible', models.CharField(choices=[('n', 'Nafta'), ('p', 'Nafta Premium'), ('d', 'Diesel'), ('l', 'Diesel Premium'), ('g', 'GNC')], default='n', max_length=1)),
                ('valor_litro', models.DecimalField(decimal_places=2, max_digits=6)),
            ],
            options={
                'ordering': ['combustible'],
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=100)),
                ('horas_semanales', models.PositiveSmallIntegerField(default=40)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Instrumental',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jornadas', models.PositiveSmallIntegerField(default=1, help_text='Jornadas de utilización.')),
            ],
            options={
                'ordering': ['-jornadas', 'instrumento'],
            },
        ),
        migrations.CreateModel(
            name='Instrumento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30)),
                ('valor_USD', models.DecimalField(decimal_places=2, help_text='Cotización dólar según Banco Nación.', max_digits=8)),
                ('vida_util', models.PositiveIntegerField(default=200, help_text='Vida útil esperada en jornadas de medición/gabinete.', verbose_name='vida útil')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrumentos', to='costos.empresa')),
            ],
            options={
                'ordering': ['nombre', 'valor_USD'],
            },
        ),
        migrations.CreateModel(
            name='Movilidad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('km', models.PositiveSmallIntegerField(default=70, help_text='Kilomtraje estimado.')),
            ],
            options={
                'ordering': ['-km', 'vehiculo'],
            },
        ),
        migrations.CreateModel(
            name='ParametroGlobal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('cotizacion_dolar', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='cotización del dólar')),
                ('modulo_tributario', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='módulo tributario SCIT')),
            ],
            options={
                'verbose_name': 'parámetro global',
                'verbose_name_plural': 'parámetros globales',
                'ordering': ['-modified'],
            },
        ),
        migrations.CreateModel(
            name='TipoGasto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detalle', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'tipo de gasto',
                'verbose_name_plural': 'tipos de gastos',
                'ordering': ['detalle'],
            },
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30)),
                ('valor', models.DecimalField(decimal_places=2, help_text='Valor de reposición en pesos.', max_digits=10)),
                ('kilometraje_anual', models.PositiveIntegerField()),
                ('rendimiento', models.PositiveSmallIntegerField(default=9, verbose_name='rendimiento [km/l]')),
                ('costo_patente', models.DecimalField(decimal_places=2, max_digits=8)),
                ('costo_seguro', models.DecimalField(decimal_places=2, max_digits=8)),
                ('costo_cochera', models.DecimalField(decimal_places=2, max_digits=8)),
                ('costo_lubricante', models.DecimalField(decimal_places=2, max_digits=8)),
                ('costo_lavado', models.DecimalField(decimal_places=2, max_digits=8)),
                ('costo_neumatico', models.DecimalField(decimal_places=2, max_digits=8)),
                ('costo_service', models.DecimalField(decimal_places=2, max_digits=8)),
                ('costo_anual_reparaciones', models.DecimalField(decimal_places=2, max_digits=8)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehiculos', to='costos.empresa')),
                ('tipo_combustible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costos.combustible')),
            ],
            options={
                'verbose_name': 'vehículo',
                'verbose_name_plural': 'vehículos',
                'ordering': ['nombre', 'valor'],
            },
        ),
        migrations.CreateModel(
            name='Trabajo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('expediente', models.PositiveIntegerField(blank=True, null=True)),
                ('comitente', models.CharField(blank=True, max_length=50)),
                ('aporte_copa', models.DecimalField(decimal_places=2, default=2200, max_digits=10)),
                ('aporte_caja', models.DecimalField(decimal_places=2, default=2890, max_digits=10)),
                ('partidas', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('lotes_finales', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('escrituras', models.DecimalField(blank=True, decimal_places=2, default=1, max_digits=8)),
                ('visado_municipio', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8)),
                ('ccu', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, verbose_name='certificado catastral urgente')),
                ('estudio_titulos', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, verbose_name='estudio de títulos')),
                ('georreferenciacion', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, verbose_name='georreferenciación')),
                ('citaciones', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8)),
                ('ayudante', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8)),
                ('dibujante', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8)),
                ('impresiones', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8)),
                ('mojones', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8)),
                ('gestor', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8)),
                ('seguros_especiales', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8)),
                ('alquiler_instrumentos', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8)),
                ('instrumentos', models.ManyToManyField(through='costos.Instrumental', to='costos.Instrumento')),
                ('profesionales', models.ManyToManyField(through='costos.Actuantes', to=settings.AUTH_USER_MODEL)),
                ('vehiculos', models.ManyToManyField(through='costos.Movilidad', to='costos.Vehiculo')),
            ],
            options={
                'ordering': ['-fecha'],
            },
        ),
        migrations.AddField(
            model_name='movilidad',
            name='trabajo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costos.trabajo'),
        ),
        migrations.AddField(
            model_name='movilidad',
            name='vehiculo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costos.vehiculo'),
        ),
        migrations.AddField(
            model_name='instrumental',
            name='instrumento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costos.instrumento'),
        ),
        migrations.AddField(
            model_name='instrumental',
            name='trabajo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costos.trabajo'),
        ),
        migrations.CreateModel(
            name='GastoPersonal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(blank=True, max_length=100, verbose_name='descripción')),
                ('monto', models.DecimalField(decimal_places=2, max_digits=8)),
                ('periodo', models.DecimalField(choices=[(1, 'Diario'), (Decimal('7.01923076923076916244781386922113597393035888671875'), 'Semanal'), (Decimal('30.416666666666667850904559600166976451873779296875'), 'Mensual'), (Decimal('60.83333333333333570180911920033395290374755859375'), 'Bimestral'), (Decimal('91.25'), 'Trimestral'), (Decimal('121.6666666666666714036182384006679058074951171875'), 'Cuatrimestral'), (Decimal('182.5'), 'Semestral'), (365, 'Anual')], decimal_places=7, default=Decimal('30.416666666666667850904559600166976451873779296875'), max_digits=10)),
                ('profesional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gastos', to=settings.AUTH_USER_MODEL)),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costos.tipogasto')),
            ],
            options={
                'verbose_name': 'gasto personal',
                'verbose_name_plural': 'gastos personales',
                'ordering': ['tipo', '-monto'],
            },
        ),
        migrations.CreateModel(
            name='GastoEmpresa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(blank=True, max_length=100, verbose_name='descripción')),
                ('monto', models.DecimalField(decimal_places=2, max_digits=8)),
                ('periodo', models.DecimalField(choices=[(1, 'Diario'), (Decimal('7.01923076923076916244781386922113597393035888671875'), 'Semanal'), (Decimal('30.416666666666667850904559600166976451873779296875'), 'Mensual'), (Decimal('60.83333333333333570180911920033395290374755859375'), 'Bimestral'), (Decimal('91.25'), 'Trimestral'), (Decimal('121.6666666666666714036182384006679058074951171875'), 'Cuatrimestral'), (Decimal('182.5'), 'Semestral'), (365, 'Anual')], decimal_places=7, default=Decimal('30.416666666666667850904559600166976451873779296875'), max_digits=10)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gastos', to='costos.empresa')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costos.tipogasto')),
            ],
            options={
                'verbose_name': 'gasto general',
                'verbose_name_plural': 'gastos generales',
                'ordering': ['tipo', '-monto'],
            },
        ),
        migrations.AddField(
            model_name='actuantes',
            name='trabajo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actuantes', to='costos.trabajo'),
        ),
        migrations.AddField(
            model_name='profesional',
            name='empresa',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='profesionales', to='costos.empresa'),
        ),
        migrations.AddField(
            model_name='profesional',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='profesional',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
